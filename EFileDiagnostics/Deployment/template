{
  "Description": "An AWS Serverless Application that uses the ASP.NET Core framework running in Amazon Lambda.",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "ApiURL": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    }
  },
  "Resources": {
    "AspNetCoreFunctionProxyResourcePermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "AspNetCoreFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/*",
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    },
    "ServerlessRestApiProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ServerlessRestApiDeploymentcfb7a37fc3"
        },
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "StageName": "Prod"
      }
    },
    "AspNetCoreFunctionRootResourcePermissionProd": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "FunctionName": {
          "Ref": "AspNetCoreFunction"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/",
            {
              "__Stage__": "*",
              "__ApiId__": {
                "Ref": "ServerlessRestApi"
              }
            }
          ]
        }
      }
    },
    "ServerlessRestApiDeploymentcfb7a37fc3": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ServerlessRestApi"
        },
        "Description": "RestApi deployment id: cfb7a37fc32efb58b061e718295e786a9a18556f",
        "StageName": "Stage"
      }
    },
    "AspNetCoreFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "a204044-brms-dev",
          "S3Key": "TRTA.Diagnostics.RuleEngine.Service/aspnetcorefunction.zip"
        },
        "Tags": [
          {
            "Value": "SAM",
            "Key": "lambda:createdBy"
          },
          {
            "Value": "DTXP-AE@thomsonreuters.com",
            "Key": "tr:resource-owner"
          },
          {
            "Value": "DEVELOPMENT",
            "Key": "tr:environment-type"
          },
          {
            "Value": "450200161",
            "Key": "tr:financial-identifier"
          },
          {
            "Value": "204044",
            "Key": "tr:application-asset-insight-id"
          }
        ],
        "MemorySize": 256,
        "Handler": "TRTA.Diagnostics.RuleEngine.Service::TRTA.Diagnostics.RuleEngine.Service.LambdaEntryPoint::FunctionHandlerAsync",
        "Role": "arn:aws:iam::367379483300:role/a204044-brms-devlambda",
        "Environment": {
          "Variables": {
            "ASPNETCORE_ENVIRONMENT": "Development"
          }
        },
        "Timeout": 30,
        "Runtime": "dotnetcore2.1"
      }
    },
    "ServerlessRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "info": {
            "version": "1.0",
            "title": {
              "Ref": "AWS::StackName"
            }
          },
          "paths": {
            "/{proxy+}": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AspNetCoreFunction.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            },
            "/": {
              "x-amazon-apigateway-any-method": {
                "x-amazon-apigateway-integration": {
                  "httpMethod": "POST",
                  "type": "aws_proxy",
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AspNetCoreFunction.Arn}/invocations"
                  }
                },
                "responses": {}
              }
            }
          },
          "swagger": "2.0"
        }
      }
    }
  }
}